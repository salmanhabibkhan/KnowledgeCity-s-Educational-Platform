"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AsgClusterProvider = void 0;
const generic_cluster_provider_1 = require("./generic-cluster-provider");
/**
 * AsgClusterProvider provisions an EKS cluster with an autoscaling group for self-managed capacity.
 */
class AsgClusterProvider extends generic_cluster_provider_1.GenericClusterProvider {
    constructor(props) {
        var _a, _b;
        super({ ...generic_cluster_provider_1.defaultOptions, ...props, ...{
                autoscalingNodeGroups: [{
                        id: (_b = (_a = props === null || props === void 0 ? void 0 : props.id) !== null && _a !== void 0 ? _a : props === null || props === void 0 ? void 0 : props.clusterName) !== null && _b !== void 0 ? _b : "eks-blueprints-asg",
                        ...props
                    }]
            } });
    }
}
exports.AsgClusterProvider = AsgClusterProvider;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNnLWNsdXN0ZXItcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9saWIvY2x1c3Rlci1wcm92aWRlcnMvYXNnLWNsdXN0ZXItcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EseUVBQW9GO0FBbUNwRjs7R0FFRztBQUNILE1BQWEsa0JBQW1CLFNBQVEsaURBQXNCO0lBRTFELFlBQVksS0FBK0I7O1FBQ3ZDLEtBQUssQ0FBQyxFQUFDLEdBQUcseUNBQWMsRUFBRSxHQUFHLEtBQUssRUFBRSxHQUFHO2dCQUNuQyxxQkFBcUIsRUFBRSxDQUFDO3dCQUNwQixFQUFFLEVBQUUsTUFBQSxNQUFBLEtBQUssYUFBTCxLQUFLLHVCQUFMLEtBQUssQ0FBRSxFQUFFLG1DQUFJLEtBQUssYUFBTCxLQUFLLHVCQUFMLEtBQUssQ0FBRSxXQUFXLG1DQUFJLG9CQUFvQjt3QkFDM0QsR0FBRyxLQUFrRDtxQkFDeEQsQ0FBQzthQUNMLEVBQUMsQ0FBQyxDQUFDO0lBQ1IsQ0FBQztDQUNIO0FBVkYsZ0RBVUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBla3MgZnJvbSBcImF3cy1jZGstbGliL2F3cy1la3NcIjtcbmltcG9ydCB7IGRlZmF1bHRPcHRpb25zLCBHZW5lcmljQ2x1c3RlclByb3ZpZGVyIH0gZnJvbSBcIi4vZ2VuZXJpYy1jbHVzdGVyLXByb3ZpZGVyXCI7XG5pbXBvcnQgeyBBdXRvc2NhbGluZ05vZGVHcm91cCB9IGZyb20gXCIuL3R5cGVzXCI7XG5cbi8qKlxuICogQ29uZmlndXJhdGlvbiBvcHRpb25zIGZvciB0aGUgY2x1c3RlciBwcm92aWRlci5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBBc2dDbHVzdGVyUHJvdmlkZXJQcm9wcyBleHRlbmRzIFBhcnRpYWw8ZWtzLkNvbW1vbkNsdXN0ZXJPcHRpb25zPiwgQXV0b3NjYWxpbmdOb2RlR3JvdXAge1xuXG4gICAgLyoqXG4gICAgICogVGhlIG5hbWUgZm9yIHRoZSBjbHVzdGVyLlxuICAgICAqL1xuICAgIG5hbWU/OiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBJcyBpdCBhIHByaXZhdGUgb25seSBFS1MgQ2x1c3Rlcj9cbiAgICAgKiBEZWZhdWx0cyB0byBwcml2YXRlX2FuZF9wdWJsaWMgY2x1c3Rlciwgc2V0IHRvIHRydWUgZm9yIHByaXZhdGUgY2x1c3RlclxuICAgICAqIEBkZWZhdWx0IGZhbHNlXG4gICAgICovXG4gICAgcHJpdmF0ZUNsdXN0ZXI/OiBib29sZWFuO1xuXG4gICAgLyoqXG4gICAgICogSXMgdGhlIEVLUyBDbHVzdGVyIGluIGlzb2xhdGVkIHN1Ym5ldHM/XG4gICAgICogQGRlZmF1bHQgZmFsc2VcbiAgICAgKi9cbiAgICBpc29sYXRlZENsdXN0ZXI/OiBib29sZWFuLFxuXG4gICAgLyoqXG4gICAgICogVGFncyBmb3IgdGhlIGNsdXN0ZXJcbiAgICAgKi9cbiAgICB0YWdzPzoge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBzdHJpbmc7XG4gICAgfVxuXG59XG5cbi8qKlxuICogQXNnQ2x1c3RlclByb3ZpZGVyIHByb3Zpc2lvbnMgYW4gRUtTIGNsdXN0ZXIgd2l0aCBhbiBhdXRvc2NhbGluZyBncm91cCBmb3Igc2VsZi1tYW5hZ2VkIGNhcGFjaXR5LlxuICovXG5leHBvcnQgY2xhc3MgQXNnQ2x1c3RlclByb3ZpZGVyIGV4dGVuZHMgR2VuZXJpY0NsdXN0ZXJQcm92aWRlciB7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm9wcz86IEFzZ0NsdXN0ZXJQcm92aWRlclByb3BzKSB7XG4gICAgICAgIHN1cGVyKHsuLi5kZWZhdWx0T3B0aW9ucywgLi4ucHJvcHMsIC4uLntcbiAgICAgICAgICAgIGF1dG9zY2FsaW5nTm9kZUdyb3VwczogW3tcbiAgICAgICAgICAgICAgICBpZDogcHJvcHM/LmlkID8/IHByb3BzPy5jbHVzdGVyTmFtZSA/PyBcImVrcy1ibHVlcHJpbnRzLWFzZ1wiLFxuICAgICAgICAgICAgICAgIC4uLnByb3BzIGFzIE9taXQ8QXV0b3NjYWxpbmdOb2RlR3JvdXAsIFwiaWRcIiB8IFwidGFnc1wiPlxuICAgICAgICAgICAgfV1cbiAgICAgICAgfX0pO1xuICAgIH1cbiB9XG4iXX0=